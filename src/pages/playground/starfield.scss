@use "sass:math";
@use "sass:list";

// Configuration variables
$star-count: 100; // Stars per layer (reduced to avoid potential compilation issues)
$perspective: 800px;
$background-color: black;

// Pseudo-random number generation functions
@function random-seed($id, $seed) {
  @return math.div(($id * 9631 + $seed) % 10000, 10000);
}

@function random-range($id, $min, $max, $seed: 1) {
  $rand: random-seed($id, $seed);
  @return $min + $rand * ($max - $min);
}

// Starfield class
.starfield {
  position: relative;
  background-color: $background-color;
  overflow: hidden;
  
  // First star layer (small stars)
  &::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    z-index: -1;
    
    $shadows: ();
    
    @for $id from 1 through $star-count {
      // Random position in 3D space
      $x: random-range($id, -50, 50, 123);
      $y: random-range($id, -50, 50, 456);
      $z: random-range($id, 0, 1000, 789);
      
      // Calculate screen position with perspective
      $scale: math.div($perspective, ($perspective + $z));
      $screen-x: ($x * $scale) + 50;
      $screen-y: ($y * $scale) + 50;
      
      // Star properties
      $size: random-range($id, 0.5, 1.5, 321) * $scale;
      $opacity: random-range($id, 0.1, 0.9, 654);
      
      // Star color
      $hue: random-range($id, 180, 240, 987);
      $saturation: random-range($id, 0, 30, 876);
      $lightness: random-range($id, 85, 100, 543);
      
      // Add to shadow list
      $shadow: #{$screen-x}vw #{$screen-y}vh 0 #{$size}px hsla(#{$hue}, #{$saturation}%, #{$lightness}%, #{$opacity});
      $shadows: list.append($shadows, $shadow, comma);
    }
    
    box-shadow: $shadows;
    border-radius: 50%;
    animation: starfield-twinkle 4s infinite ease-in-out;
  }
  
  // Second star layer (larger stars)
  &::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    z-index: -1;
    
    $shadows: ();
    
    @for $id from 1 through math.div($star-count, 2) {
      // Random position in 3D space
      $x: random-range($id, -50, 50, 876);
      $y: random-range($id, -50, 50, 543);
      $z: random-range($id, 0, 800, 210);
      
      // Calculate screen position with perspective
      $scale: math.div($perspective, ($perspective + $z));
      $screen-x: ($x * $scale) + 50;
      $screen-y: ($y * $scale) + 50;
      
      // Star properties
      $size: random-range($id, 1.5, 2.5, 987) * $scale;
      $opacity: random-range($id, 0.3, 1.0, 321);
      
      // Star color
      $hue: random-range($id, 180, 240, 654);
      $saturation: random-range($id, 0, 30, 789);
      $lightness: random-range($id, 85, 100, 456);
      
      // Add to shadow list
      $shadow: #{$screen-x}vw #{$screen-y}vh 0 #{$size}px hsla(#{$hue}, #{$saturation}%, #{$lightness}%, #{$opacity});
      $shadows: list.append($shadows, $shadow, comma);
    }
    
    box-shadow: $shadows;
    border-radius: 50%;
    animation: starfield-twinkle 5s infinite ease-in-out 1s;
  }
  
  // Ensure content is positioned above the starfield
  > * {
    position: relative;
    z-index: 1;
  }
}

// Animation keyframes
@keyframes starfield-twinkle {
  0%, 100% { opacity: 1; }
  50% { opacity: 0.5; }
}